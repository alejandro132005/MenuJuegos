/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package autonoma.menuJuegos.gui;

import autonoma.menuJuegos.elements.HiloMoverSnake;
import autonoma.menuJuegos.elements.Pacman;
import autonoma.menuJuegos.elements.Snake;
import autonoma.menuJuegos.elements.Sonido;
import static autonoma.menuJuegos.gui.SnakeGameWindow._HEIGHT;
import static autonoma.menuJuegos.gui.SnakeGameWindow._WIDTH;
import autonoma.menuJuegosBase.elements.GraphicContainer;
import java.awt.Color;
import java.awt.Graphics;
import java.awt.Rectangle;
import java.awt.event.KeyEvent;
import java.awt.image.BufferedImage;
import java.io.IOException;

/**
 *
 * @author Camila
 */
public class PacmanGameWindow extends javax.swing.JFrame implements GraphicContainer {

    private Pacman ventana;
    private GameWindow ventanaPrincipal;
    private BufferedImage imagenBuffer;
//    private HiloMoverPacman hiloPacman;
    private Sonido sonido;
    private Graphics gImagenBuffer;
     public static final int _WIDTH = 500;
    public static final int _HEIGHT = 500;
    
    public PacmanGameWindow(GameWindow ventanaPrincipal) {
        initComponents();
        this.setSize(_WIDTH,_HEIGHT);
        this.setLocationRelativeTo(null);
        this.ventana = new Pacman(0, 0, 500, 500, Color.BLACK, this);
        this.sonido = new Sonido();
//        this.hiloPacman = new HiloMoverPacman(this.ventana);
//        this.hiloPacman.start();
        this.ventanaPrincipal = ventanaPrincipal;
        this.imagenBuffer = new BufferedImage(this.getWidth(), this.getHeight(), BufferedImage.TYPE_INT_RGB);
        this.gImagenBuffer = this.imagenBuffer.getGraphics();
    }
    
    private void exitGame() {
//        this.hiloSnake.stop();
        ventanaPrincipal = new GameWindow ();
        ventanaPrincipal.setVisible(true);
        this.dispose();
    }
    
    
    
    
     @Override
    public void update(Graphics g){
        gImagenBuffer.setColor(Color.BLACK);
        gImagenBuffer.fillRect(0, 0, imagenBuffer.getWidth(), imagenBuffer.getHeight());
        ventana.paint(gImagenBuffer);
        g.drawImage(imagenBuffer, 0, 0, this);
    }
    
    /**
    * metodo paint que dibuja todos los elementos en la ventana
    */
    @Override
    public void paint(Graphics g) { 
        update(g); 
               
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyPressed
        try {
            this.ventana.handleKey(evt);
        } catch (IOException e) {
            e.printStackTrace();
        }

        if (evt.getKeyCode() == KeyEvent.VK_Q) {
            exitGame();
        }
        repaint();
    }//GEN-LAST:event_formKeyPressed

    @Override
    public void refresh() {
        this.repaint();
    }

    @Override
    public Rectangle getBoundaries() {
        return this.getBounds(); 
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
