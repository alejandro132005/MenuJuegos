/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package autonoma.menuJuegos.gui;

import autonoma.menuJuegos.elements.HiloMoverSnake;
import autonoma.menuJuegos.elements.Snake;
import autonoma.menuJuegosBase.elements.GraphicContainer;
import java.awt.Color;
import java.awt.Graphics;
import java.awt.Rectangle;
import java.awt.event.KeyEvent;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author Camila
 */
public class SnakeGameWindow extends javax.swing.JFrame implements GraphicContainer {
    Snake ventana;
    Thread hilo;
    public SnakeGameWindow() {
        initComponents();
        this.setSize(500,500);
        this.setLocationRelativeTo(null);
        this.ventana = new Snake(0, 0, 500, 500, Color.BLACK, this);
        HiloMoverSnake hiloSnake = new HiloMoverSnake(this.ventana);
        hiloSnake.start();
    }
    
    private void exitGame(){
        this.dispose();
    }
    
    @Override
    public void paint(Graphics g) {
       super.paint(g); 
       setBackground(Color.black);
       this.ventana.draw(g);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_W && this.ventana.getSerpiente().getVelocidadX() != 1) {
            this.ventana.getSerpiente().setVelocidadX(0);
            this.ventana.getSerpiente().setVelocidadY(-1);
        }
        else if (evt.getKeyCode() == KeyEvent.VK_S && this.ventana.getSerpiente().getVelocidadY() != -1) {
            this.ventana.getSerpiente().setVelocidadX(0);
            this.ventana.getSerpiente().setVelocidadY(1);
        }
        else if (evt.getKeyCode() == KeyEvent.VK_A && this.ventana.getSerpiente().getVelocidadX() != 1) {
            this.ventana.getSerpiente().setVelocidadX(-1);
            this.ventana.getSerpiente().setVelocidadY(0);
        }
        else if (evt.getKeyCode() == KeyEvent.VK_D && this.ventana.getSerpiente().getVelocidadX() != -1) {
            this.ventana.getSerpiente().setVelocidadX(1);
            this.ventana.getSerpiente().setVelocidadY(0);
        }
        else if (evt.getKeyCode() == KeyEvent.VK_Q) {
            exitGame();
        }
        repaint();
    }//GEN-LAST:event_formKeyPressed

    @Override
    public void refresh() {
        this.repaint();
    }

    @Override
    public Rectangle getBoundaries() {
        return this.getBounds();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
